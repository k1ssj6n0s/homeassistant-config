---
blueprint:
  source_url: https://github.com/k1ssj6n0s/homeassistant-config/blob/main/zha_ikea_tradfri_styrbar_white.yaml
  name: ZHA - IKEA TRADFRI - STYRBAR - White Lights
  description: This automation simulates the use of the IKEA TRADFRI STYRBAR
    remote control with TRÃ…DFRI GU10 345lm white spectrum buld (LED2106R3)
    connected through ZHA.
  domain: automation
  input:
    remote:
      name: IKEA TRADFRI remote control
      description: Select the remote control you wish to use.
      selector:
        device:
          filter:
            - integration: zha
              manufacturer: IKEA of Sweden
              model: Remote Control N2
    light:
      name: Light
      description: Select the light entity you wish to control.
      selector:
        entity:
          filter:
            - domain: light
    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 100
          max: 1000
          step: 100
          unit_of_measurement: milliseconds
          mode: slider
      default: 500
mode: restart
max_exceeded: silent
variables:
  var_light: light
  var_speed: speed
trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: remote
action:
  - choose:
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "on" }}'
          - condition: state
            entity_id: light
            state: off
        sequence:
          - service: light.turn_on
            target:
              entity_id: light
            data:
              transition: "{{ (var_speed / 1000)|float }}"
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move_with_on_off" }}'
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: light
                  data:
                    brightness_step_pct: 10
                    transition: "{{ (var_speed / 1000)|float }}"
                - delay:
                    milliseconds: speed
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "off" }}'
        sequence:
          - service: light.turn_off
            target:
              entity_id: light
            data:
              transition: "{{ (var_speed / 1000)|float }}"
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move" }}'
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: light
                  data:
                    brightness_step_pct: -10
                    transition: "{{ (var_speed / 1000)|float }}"
                - delay:
                    milliseconds: speed
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "press" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [257,13,0] }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: light
            data:
              color_temp: '{% if state_attr(var_light, "color_temp") + 18 > 500 %} {{ 500 }}
                {% else %} {{ state_attr(var_light, "color_temp") + 18 }} {%
                endif %}'
              transition: "{{ (var_speed / 1000)|float }}"
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "hold" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [3329,0] }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: light
                  data:
                    color_temp: '{% if state_attr(var_light, "color_temp") + 18 > 500 %} {{ 500 }}
                      {% else %} {{ state_attr(var_light, "color_temp") + 18 }}
                      {% endif %}'
                    transition: "{{ (var_speed / 1000)|float }}"
                - delay:
                    milliseconds: speed
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "press" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [256,13,0] }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: light
            data:
              color_temp: '{% if state_attr(var_light, "color_temp") - 18 < 153 %} {{ 153 }}
                {% else %} {{ state_attr(var_light, "color_temp") - 18 }} {%
                endif %}'
              transition: "{{ (var_speed / 1000)|float }}"
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "hold" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [3328,0] }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: light
                  data:
                    color_temp: '{% if state_attr(var_light, "color_temp") - 18 < 153 %} {{ 153 }}
                      {% else %} {{ state_attr(var_light, "color_temp") - 18 }}
                      {% endif %}'
                    transition: "{{ (var_speed / 1000)|float }}"
                - delay:
                    milliseconds: speed
    default: []
